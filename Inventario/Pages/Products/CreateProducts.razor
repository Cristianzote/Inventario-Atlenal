@page "/product/create"

@using Access.API;

<div class="pb-24 pt-8 bg-green-800">
    <div class="w-5/6 mx-auto bg-white p-6 rounded-lg shadow-md ring-2 ring-green-700">
        <h1 class="text-lg font-medium text-green-900 mb-4">Crear producto</h1>

        <!-- Product Name -->
        <div class="mb-6">
            <label for="name" class="block text-sm font-medium text-green-900 mb-1">Nombre del producto</label>
            <input type="text" id="name" name="name" class="w-full py-2 px-3 bg-gray-100 text-green-900 border border-green-300 rounded-md focus:outline-none focus:ring focus:ring-green-500">
        </div>

        <!-- Product Category (Select Dropdown) -->
        <div class="mb-6">
            <label for="category" class="block text-sm font-medium text-green-900 mb-1">Categoría</label>
            <select id="category" name="category" class="w-full py-2 px-3 bg-gray-100 text-green-900 border border-green-300 rounded-md focus:outline-none focus:ring focus:ring-green-500">
                <option value="gaseosa">Gaseosa</option>
                <option value="bebidas">Bebidas</option>
                <option value="alcohol">Alcohol</option>
                <option value="medicina">Medicina</option>
                <option value="otros">Otros</option>
            </select>
        </div>

        @for (int i = 0; i < presentationArray.Count(); i++)
        {
            <label for="presentationName" class="block text-sm font-medium text-green-900 mb-1"></label>

            <div class="mb-6 border-b border-green-300 pb-4">

                <div class="w-full flex justify-between">
                    <h2 class="text-lg font-medium text-green-900 mb-4">Presentación @(i + 1)</h2>
                    <div class="flex justify-center">
                        <button @*onclick="() => DeletePresentation(i)"*@ type="submit" class="bg-red-400 inline-block bg-fuchsia-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-md focus:outline-none focus:ring focus:ring-red-200 transition duration-300">Eliminar</button>
                    </div>
                </div>

                <!-- Name of Presentation -->
                <div class="mb-4">
                    <label for="presentationName" class="block text-sm font-medium text-green-900 mb-1">Nombre de la presentación</label>
                    <input type="text" id="presentationName" name="name" @bind="presentationArray[i].name" class="w-full py-2 px-3 bg-gray-100 text-green-900 border border-green-300 rounded-md focus:outline-none focus:ring focus:ring-green-500">
                </div>

                <!-- Income Price and Outcome Price (Combined) -->
                <div class="flex justify-between mb-4">
                    <div class="w-1/2 pr-2">
                        <label for="incomePrice" class="block text-sm font-medium text-green-900 mb-1">Precio de entrada</label>
                        <input type="number" id="incomePrice" name="incomePrice" @bind="@presentationArray[i].priceIncome" class="w-full py-2 px-3 bg-gray-100 text-green-900 border border-green-300 rounded-md focus:outline-none focus:ring focus:ring-green-500">
                    </div>
                    <div class="w-1/2 pl-2">
                        <label for="outcomePrice" class="block text-sm font-medium text-green-900 mb-1">Precio de salida</label>
                        <input type="number" id="outcomePrice" name="outcomePrice" @bind="@presentationArray[i].priceOutput" class="w-full py-2 px-3 bg-gray-100 text-green-900 border border-green-300 rounded-md focus:outline-none focus:ring focus:ring-green-500">
                    </div>
                </div>

                <!-- Detail Sale Switch -->
                <div @onclick="() => ToggleDetail(i)">
                    <div class="flex items-center mb-4">
                        <input @bind="@detailCheckbox[i]" id="@($"detailSale{i}")" name="@($"detailSale{i}")" type="checkbox" class="h-4 w-4 bg-gray-100 text-green-900 focus:ring focus:ring-green-500 border border-green-300 rounded mr-2">

                    <label for="@($"detailSale{i}")" class="text-sm font-medium text-green-900">¿Presentación con venta menudeada?</label>
                    </div>

                   @if (detailCheckbox[i] == true)
                   {
                        <!-- Detail Count Input (Shown if Detail Sale Switch is checked) -->
                        <div class="flex items-center">
                            <label for="detailCount" class="text-sm font-medium text-green-900">Descartar una unidad cada </label>
                            <input type="number" id="detailCount" name="detailCount" @bind="@presentationArray[i].retailStockRatio" class="mx-2 w-16 py-2 px-3 bg-gray-100 text-green-900 border border-green-300 rounded-md focus:outline-none focus:ring focus:ring-green-500 ml-2">
                            <label for="detailCount" class="text-sm font-medium text-green-900"> ventas menudeadas</label>
                        </div>
                   }
                </div>
            </div>
        }

        <!-- Plus Button (to add more presentations) -->
        <div class="flex justify-center mb-6">
            <button @onclick="AddPresentation" type="button" class="bg-green-400 inline-block bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded-full focus:outline-none focus:ring focus:ring-green-200 transition duration-300">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                </svg>
            </button>
        </div>

        <!-- Submit and Cancel Buttons -->
        <div class="flex justify-end">
            <button type="submit" class="bg-green-400 inline-block bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded-md focus:outline-none focus:ring focus:ring-green-200 transition duration-300 mr-4">Crear</button>
            <button type="button" class="bg-red-400 inline-block bg-fuchsia-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-md focus:outline-none focus:ring focus:ring-red-200 transition duration-300">Cancelar</button>
        </div>
    </div>
</div>


@code {

    bool[] detailCheckbox = [];
    Presentation[] presentationArray = [];

    protected void AddPresentation()
    {
        Presentation NewPresentation = new Presentation { };
        Array.Resize(ref presentationArray, presentationArray.Length + 1);
        presentationArray[presentationArray.Length - 1] = NewPresentation;

        ResizeCheckboxArray(presentationArray);
    }

    protected void ToggleDetail(int i)
    {
        detailCheckbox[i] = !detailCheckbox[i];
    }


    protected void ResizeCheckboxArray(Presentation[] presentations)
    {
        Array.Resize(ref detailCheckbox, presentations.Length + 1);
        for (int i = 0; i <= detailCheckbox.Length; i++)
        {
            if (presentations[i].retailStockRatio == 1 || presentations[i].retailStockRatio == 0)
            {
                detailCheckbox[i] = false;
            }
            else
            {
                detailCheckbox[i] = true;
            }
        }
    }

}
