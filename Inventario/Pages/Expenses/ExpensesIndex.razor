@page "/expenses"
@using Access.API;
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using System.Net.Http;
@using System.Net.Http.Json;
@using Inventario.Pages.Movements;
@using Inventario.Pages.Layout;
@using System.Globalization;
@using Inventario.Pages.Expenses;
@inject IJSRuntime Js

@inject NavigationManager navigationManager;

<div class="bg-green-800 w-full text-white">
    <div class="pt-3 flex w-full justify-center text-center text-lg font-bold">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-7 pr-2">
            <path d="M12 7.5a2.25 2.25 0 1 0 0 4.5 2.25 2.25 0 0 0 0-4.5Z" />
            <path fill-rule="evenodd" d="M1.5 4.875C1.5 3.839 2.34 3 3.375 3h17.25c1.035 0 1.875.84 1.875 1.875v9.75c0 1.036-.84 1.875-1.875 1.875H3.375A1.875 1.875 0 0 1 1.5 14.625v-9.75ZM8.25 9.75a3.75 3.75 0 1 1 7.5 0 3.75 3.75 0 0 1-7.5 0ZM18.75 9a.75.75 0 0 0-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 0 0 .75-.75V9.75a.75.75 0 0 0-.75-.75h-.008ZM4.5 9.75A.75.75 0 0 1 5.25 9h.008a.75.75 0 0 1 .75.75v.008a.75.75 0 0 1-.75.75H5.25a.75.75 0 0 1-.75-.75V9.75Z" clip-rule="evenodd" />
            <path d="M2.25 18a.75.75 0 0 0 0 1.5c5.4 0 10.63.722 15.6 2.075 1.19.324 2.4-.558 2.4-1.82V18.75a.75.75 0 0 0-.75-.75H2.25Z" />
        </svg>


        <p>Gastos mensuales</p>
    </div>

    <div class="p-1 flex w-full justify-center text-center text-md">
        @if (expensesResponse != null)
        {
            <p class="">Este mes: @GetmonthExpenses().ToString("C0")</p>
        }
    </div>
</div>
<div class="relative w-full overflow-auto">

    <!-- Gastos -->
    <section class="grid grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 px-4 pt-4 pb-20 md:p-6 gap-4">
        @if (expensesResponse != null)
        {
            foreach (var expense in expensesResponse)
            {
                if (expense.active == true)
                {
                    if(expense.type == ExpenceType.RECURRENT)
                    {
                        <div @onclick="() => modal.Toggle(expense, expense.idExpense)" class="transition duration-500 ease-in-out hover:scale-110 bg-sky-400 cursor-pointer rounded-lg shadow-md shadow-sky-800/20">
                            <div class="rounded-lg text-center w-full relative flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-12 text-sky-900 text-center align-self-center">
                                    <path fill-rule="evenodd" d="M12 5.25c1.213 0 2.415.046 3.605.135a3.256 3.256 0 0 1 3.01 3.01c.044.583.077 1.17.1 1.759L17.03 8.47a.75.75 0 1 0-1.06 1.06l3 3a.75.75 0 0 0 1.06 0l3-3a.75.75 0 0 0-1.06-1.06l-1.752 1.751c-.023-.65-.06-1.296-.108-1.939a4.756 4.756 0 0 0-4.392-4.392 49.422 49.422 0 0 0-7.436 0A4.756 4.756 0 0 0 3.89 8.282c-.017.224-.033.447-.046.672a.75.75 0 1 0 1.497.092c.013-.217.028-.434.044-.651a3.256 3.256 0 0 1 3.01-3.01c1.19-.09 2.392-.135 3.605-.135Zm-6.97 6.22a.75.75 0 0 0-1.06 0l-3 3a.75.75 0 1 0 1.06 1.06l1.752-1.751c.023.65.06 1.296.108 1.939a4.756 4.756 0 0 0 4.392 4.392 49.413 49.413 0 0 0 7.436 0 4.756 4.756 0 0 0 4.392-4.392c.017-.223.032-.447.046-.672a.75.75 0 0 0-1.497-.092c-.013.217-.028.434-.044.651a3.256 3.256 0 0 1-3.01 3.01 47.953 47.953 0 0 1-7.21 0 3.256 3.256 0 0 1-3.01-3.01 47.759 47.759 0 0 1-.1-1.759L6.97 15.53a.75.75 0 0 0 1.06-1.06l-3-3Z" clip-rule="evenodd" /> />
                                </svg>
                            </div>
                            <div class="px-4 py-1">
                                <h3 class="text-balance group-hover:text-white text-center text-m font-bold">@expense.name</h3>
                                <p class="text-balance group-hover:text-white text-center text-sm overflow-hidden whitespace-normal">@expense.description</p>
                                <div class="flex items-center justify-center space-x-2 text-lg font-bold">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v12m-3-2.818.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                                    </svg>
                                    <p class="text-balance group-hover:text-white text-center text-sm">@expense.value.ToString("C0")</p>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div @onclick="() => modal.Toggle(expense, expense.idExpense)" class="transition duration-500 ease-in-out hover:scale-110 bg-teal-400 cursor-pointer rounded-lg shadow-md shadow-teal-800/20 overflow-hidden">
                            <div class="rounded-lg text-center w-full relative flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-12 text-teal-900 text-center align-self-center">
                                    <path fill-rule="evenodd" d="M14.615 1.595a.75.75 0 0 1 .359.852L12.982 9.75h7.268a.75.75 0 0 1 .548 1.262l-10.5 11.25a.75.75 0 0 1-1.272-.71l1.992-7.302H3.75a.75.75 0 0 1-.548-1.262l10.5-11.25a.75.75 0 0 1 .913-.143Z" clip-rule="evenodd" />
                                </svg>
                            </div>
                            <div class="px-4 py-1">
                                <h3 class="text-balance group-hover:text-white text-center text-m font-bold">@expense.name</h3>
                                <p class="text-balance group-hover:text-white text-center text-sm overflow-hidden whitespace-normal">@expense.description</p>
                                <div class="flex items-center justify-center space-x-2 text-lg font-bold">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v12m-3-2.818.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                                    </svg>
                                    <p class="text-balance group-hover:text-white text-center text-sm">@expense.value.ToString("C0")</p>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        }
        else
        {
            for (int i = 0; i < 24; i++)
            {
                <div role="status" class="max-w-sm p-1 border border-green-200 rounded shadow animate-pulse">
                    <div class="flex items-center justify-center h-12 mb-1 bg-white rounded">
                        <svg class="w-10 h-10 text-green-200" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 20">
                            <path fill-rule="evenodd" d="M2 10a8 8 0 1 1 16 0 8 8 0 0 1-16 0Zm8 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm-3-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0Zm7 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <div class="h-2 bg-green-200 rounded-full mb-2.5"></div>
                    <div class="h-2 bg-green-200 rounded-full mb-2.5"></div>
                    <div class="h-2 bg-green-200 rounded-full mb-2.5"></div>
                    <span class="sr-only">Loading...</span>
                </div>
            }
        }
    </section>
</div>
<CheckExpenseModal @ref=modal />

<div class="fixed bottom-24 right-4">
    <button class="bg-green-800 text-white rounded-full p-4 shadow-md hover:bg-green-900 hover:text-white focus:outline-none focus:ring-2 focus:ring-green-00 focus:ring-opacity-50 flex items-center">
        <a href="/expenses/create" class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
            </svg>

            <h1>Añadir gasto</h1>
        </a>
    </button>
</div>

@code {
    CheckExpenseModal modal;
    List<Expense> expensesResponse;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            HttpClient client = new HttpClient();
            expensesResponse = await client.GetFromJsonAsync<List<Expense>>("https://www.baratlenal.somee.com/api/v1/expense");
            //StateHasChanged(); // Manually trigger UI update
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private float GetmonthExpenses()
    {
        float monthExpenses = 0;
        var expenses = expensesResponse.Where(e => e.active == true).ToList();

        foreach (var expense in expenses)
        {
            monthExpenses += (float)(expense.value * expense.multiplier);
        }

        return monthExpenses;
    }
}
