@page "/expenses/detail/{idExpense}"
@using Access.API;
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using System.Net.Http;
@using System.Net.Http.Json;
@using Inventario.Pages.Products;
@using Inventario.Pages.Layout;
@inject IJSRuntime Js
@inject NavigationManager navigationManager

<div class="pb-24 pt-8 bg-green-800">
    @if (ExpenseResponse != null)
    {
        <div class="w-5/6 mx-auto bg-white p-6 rounded-lg shadow-md ring-2 ring-green-700">
            <h1 class="text-lg font-medium text-green-900 mb-4">Crear gasto</h1>

            <!-- Expense Name -->
            <div class="mb-6">
                <label for="name" class="block text-sm font-medium text-green-900 mb-1">Nombre del gasto</label>
                <input @bind="@ExpenseResponse.name" type="text" id="name" name="name" class="w-full py-2 px-3 bg-gray-100 text-green-900 border border-green-300 rounded-md focus:outline-none focus:ring focus:ring-green-500">
            </div>
            <!-- Description -->
            <div class="mb-6">
                <label for="name" class="block text-sm font-medium text-green-900 mb-1">Descripción del gasto</label>
                <input @bind="@ExpenseResponse.description" type="text" id="name" name="name" class="w-full py-2 px-3 bg-gray-100 text-green-900 border border-green-300 rounded-md focus:outline-none focus:ring focus:ring-green-500">
            </div>

            <!-- Product Category (Select Dropdown) -->
            <div class="mb-6">
                <label for="category" class="block text-sm font-medium text-green-900 mb-1">Tipo de gasto</label>
                <select @bind="@ExpenseResponse.type" id="category" name="category" class="w-full py-2 px-3 bg-gray-100 text-green-900 border border-green-300 rounded-md focus:outline-none focus:ring focus:ring-green-500">
                    <option value="@(ExpenceType.RECURRENT)">Recurrente</option>
                    <option value="@(ExpenceType.OCCASIONAL)">Ocacional</option>
                </select>
            </div>

            <div class="flex justify-between mb-4">
                <div class="w-1/2 pr-2">
                    <label for="incomePrice" class="block text-sm font-medium text-green-900 mb-1">Valor</label>
                    <div class="flex">
                        <span class="inline-flex items-center px-3 text-sm text-white bg-gray-200 border rounded-e-0 border-green-300 border-e-0 rounded-s-md">
                            <svg class="w-4 h-4 text-green-900" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M1 4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V4Zm12 4a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM4 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm13-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM1.75 14.5a.75.75 0 0 0 0 1.5c4.417 0 8.693.603 12.749 1.73 1.111.309 2.251-.512 2.251-1.696v-.784a.75.75 0 0 0-1.5 0v.784a.272.272 0 0 1-.35.25A49.043 49.043 0 0 0 1.75 14.5Z" clip-rule="evenodd" />
                            </svg>
                        </span>
                        <input type="number" @bind="@ExpenseResponse.value" class="w-full py-2 px-3 bg-gray-100 text-green-900 border border-green-300 rounded-md focus:outline-none focus:ring focus:ring-green-500" placeholder="Valor">
                    </div>
                </div>
                <div class="w-1/2 pl-2">
                    <label for="outcomePrice" class="block text-sm font-medium text-green-900 mb-1">Multiplicador</label>
                    <div class="flex">
                        <span class="inline-flex items-center px-3 text-sm text-white bg-gray-200 border rounded-e-0 border-green-300 border-e-0 rounded-s-md">
                            <svg class="w-4 h-4 text-gray-900" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M10 1c-1.716 0-3.408.106-5.07.31C3.806 1.45 3 2.414 3 3.517V16.75A2.25 2.25 0 0 0 5.25 19h9.5A2.25 2.25 0 0 0 17 16.75V3.517c0-1.103-.806-2.068-1.93-2.207A41.403 41.403 0 0 0 10 1ZM5.99 8.75A.75.75 0 0 1 6.74 8h.01a.75.75 0 0 1 .75.75v.01a.75.75 0 0 1-.75.75h-.01a.75.75 0 0 1-.75-.75v-.01Zm.75 1.417a.75.75 0 0 0-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 0 0 .75-.75v-.01a.75.75 0 0 0-.75-.75h-.01Zm-.75 2.916a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 .75.75v.01a.75.75 0 0 1-.75.75h-.01a.75.75 0 0 1-.75-.75v-.01Zm.75 1.417a.75.75 0 0 0-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 0 0 .75-.75v-.01a.75.75 0 0 0-.75-.75h-.01Zm1.417-5.75a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 .75.75v.01a.75.75 0 0 1-.75.75h-.01a.75.75 0 0 1-.75-.75v-.01Zm.75 1.417a.75.75 0 0 0-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 0 0 .75-.75v-.01a.75.75 0 0 0-.75-.75h-.01Zm-.75 2.916a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 .75.75v.01a.75.75 0 0 1-.75.75h-.01a.75.75 0 0 1-.75-.75v-.01Zm.75 1.417a.75.75 0 0 0-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 0 0 .75-.75v-.01a.75.75 0 0 0-.75-.75h-.01Zm1.42-5.75a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 .75.75v.01a.75.75 0 0 1-.75.75h-.01a.75.75 0 0 1-.75-.75v-.01Zm.75 1.417a.75.75 0 0 0-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 0 0 .75-.75v-.01a.75.75 0 0 0-.75-.75h-.01Zm-.75 2.916a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 .75.75v.01a.75.75 0 0 1-.75.75h-.01a.75.75 0 0 1-.75-.75v-.01Zm.75 1.417a.75.75 0 0 0-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 0 0 .75-.75v-.01a.75.75 0 0 0-.75-.75h-.01ZM12.5 8.75a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 .75.75v.01a.75.75 0 0 1-.75.75h-.01a.75.75 0 0 1-.75-.75v-.01Zm.75 1.417a.75.75 0 0 0-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 0 0 .75-.75v-.01a.75.75 0 0 0-.75-.75h-.01Zm0 2.166a.75.75 0 0 1 .75.75v2.167a.75.75 0 1 1-1.5 0v-2.167a.75.75 0 0 1 .75-.75ZM6.75 4a.75.75 0 0 0-.75.75v.5c0 .414.336.75.75.75h6.5a.75.75 0 0 0 .75-.75v-.5a.75.75 0 0 0-.75-.75h-6.5Z" clip-rule="evenodd" />
                            </svg>
                        </span>
                        <input type="number" @bind="@ExpenseResponse.multiplier" class="w-full py-2 px-3 bg-gray-100 text-green-900 border border-green-300 rounded-md focus:outline-none focus:ring focus:ring-green-500" placeholder="Multiplicador">
                    </div>
                </div>
            </div>
            <!-- Submit and Cancel Buttons -->
            <div class="flex justify-end">
                <button @onclick="()=>UpdateExpense()" type="submit" class="bg-green-400 inline-block bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded-md focus:outline-none focus:ring focus:ring-green-200 transition duration-300 mr-4">guardar</button>
                <button @onclick="CancelCreation" type="button" class="bg-red-400 inline-block bg-fuchsia-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-md focus:outline-none focus:ring focus:ring-red-200 transition duration-300">Cancelar</button>
            </div>
        </div>
    }
</div>

<style>
    body {
        background-color: #166534;
    }
</style>

<SwalToast @ref=swalToast />

@code {
    [Parameter]
    public string idExpense { get; set; }
    SwalToast swalToast;

    Expense ExpenseResponse;
    Presentation[] presentationArray = Array.Empty<Presentation>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            HttpClient client = new HttpClient();
            ExpenseResponse = await client.GetFromJsonAsync<Expense>($"https://www.baratlenal.somee.com/api/v1/expense/{idExpense}");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private async Task UpdateExpense()
    {
        var options = new JsonSerializerOptions
            {
                ReferenceHandler = ReferenceHandler.Preserve,
                WriteIndented = true
            };

        try
        {
            // Serialize the transaction object to JSON
            var jsonTransaction = JsonSerializer.Serialize(ExpenseResponse, options);
            var content = new StringContent(jsonTransaction, System.Text.Encoding.UTF8, "application/json");

            // Make petition
            HttpClient client = new HttpClient();
            HttpResponseMessage response = await client.PutAsJsonAsync($"https://www.baratlenal.somee.com/api/v1/expense", ExpenseResponse);
            string responseBody = await response.Content.ReadAsStringAsync();

            if (!response.IsSuccessStatusCode)
            {
                throw new Exception($"Server error (HTTP {response.StatusCode}): {responseBody}");
            }

            navigationManager.NavigateTo("/expenses");
        }
        catch (Exception e)
        {
            Console.WriteLine($"Request error: {e.Message}");
        }
    }

    protected void CancelCreation()
    {
        navigationManager.NavigateTo("/expenses");
    }
}